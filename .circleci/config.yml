# to use orbs, must use version >= 2.1
version: 2.1
orbs:
  # import Cypress orb by specifying an exact version x.y.z
  # or the latest version 1.x.x using "@1" syntax
  # https://github.com/cypress-io/circleci-orb
  cypress: cypress-io/cypress@1

parameters:
  TEST_BRANCH:
    type: string
    default: 'main'
  TEST_URL:
    type: string
    default: ''

jobs:
  info:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      - run:
          name: print variables
          command: |
            echo "TEST_BRANCH is << pipeline.parameters.TEST_BRANCH >>"
            echo "TEST_URL is << pipeline.parameters.TEST_URL >>"

  # preview deploys might take a little bit to be ready
  # this job pings the TEST_URL to check if the deployment has finished
  wait-for-deploy:
    machine:
      image: ubuntu-2004:202104-01
    steps:
      # if there is no TEST_URL set, skip this job
      - unless:
          condition: << pipeline.parameters.TEST_URL >>
          steps:
            # https://circleci.com/docs/2.0/configuration-reference/#ending-a-job-from-within-a-step
            - run: circleci-agent step halt
      - run:
          name: wait for deployment
          command: |
            echo "Using wait-on to check if the URL << pipeline.parameters.TEST_URL >> responds"
            echo "See https://www.npmjs.com/package/wait-on"
            npx wait-on --verbose \
              --interval 10000 --timeout 60000 \
              << pipeline.parameters.TEST_URL >>

workflows:
  build:
    jobs:
      - info
      - wait-for-deploy

      - cypress/run:
          name: Cypress E2E tests
          requires:
            - wait-for-deploy
          # if the pipeline has TEST_URL parameter,
          # pass it to Cypress as base url
          # using conditional template syntax
          # https://circleci.com/docs/2.0/reusing-config/
          config: <<# pipeline.parameters.TEST_URL >>'baseUrl=<< pipeline.parameters.TEST_URL >>'<</ pipeline.parameters.TEST_URL >>
          # save videos and screenshots on Circle as artifacts
          store_artifacts: true
          # we do not need to save the workspace after the tests are done
          no-workspace: true
